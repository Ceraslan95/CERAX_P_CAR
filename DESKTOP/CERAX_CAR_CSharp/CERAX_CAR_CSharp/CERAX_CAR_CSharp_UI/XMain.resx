<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD0AAAA9CAYAAAAeYmHpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAPBSURBVGhD7VorcNtAEDUMDDQMLCwsNDQsNAw0DCwMCwwM
        LDQMNDQMNPR/BA0NDdP3POuOctqTlNOepLT3ZpboVvu53dv7DhISEhISEhL+b2RZNtxut9Pdbvd4OBye
        9/v9Ik/49sI28Dys1+tv8tvXA42HE7/g1BL0/klasXPw/w8R129sNpvvMHruONGElsiCsYjvF5jCiM5v
        xWgrWvQq8jBogmicHSNj0ZOo7Q4sQIphGmUcp+QHjfIkY/8JVHf8vyKzbsSE9gClt1TuGPOB4NAR9PiZ
        igy5d+iEKf6v6oAleeW3dgClXofh6InONo0GZPyEvMyVn6MVO1/Y4wLKmIqaEXR4BkOGwmoCdqCmS+hV
        2OIBSiaO0r9E44TNHIw6yFcs4xU3RrBE8UTYooFTlk8/vseZyyFcHcesvsISHdDny7SlsNhBVloFZejh
        mbC0BuhVawqrvrDYAEK5OfigBA4frYtWXUB/YUoTe2zmb44lVwEJ3x+EpXXAQU5nmk020YawQjqZ9mog
        YIdWY+bS3AwQtHIEt1q8fEDHj1y78O3cOBgQcOcKJvG7sHQKOHlybWPqS3MYOG5doSD76SEQ2naWJzHS
        HAYI0aaH7rd3AtiizdsLaQ4DUmWmCL2X5s7hWT+spDkMEKDNzyNp7hyoLUPFvpM0hwFCClu7vp1YwsnC
        ehydEb7lhMCjIrAXlfsKRlaxMXylCAFvrsCepfeNax9JmsMAAdqqJ/o2si441BT7MmkOA+c8V2iXa24X
        yLqxax+o2ZTF5aYi1GZ9awDYou0Lmm13OX4VoVzftnMgVwHYo+0Lmu+04GShgoM6H9ee8Wwzu3iua+Kf
        QlaAlweKXTb7AkTat2Hv7G6J8zCHmWsTvtmcyHIu9KR4Z7stLcrsBHaGsDQHi4OrRKj1zQczTIsyO0JY
        7ADB2mHcuc00Z5HSss48yldAsDq2aQSNEbZo4DCDPvViDx0f7/gKDmr7azrOS7toa3JGEXp8N5lv7BBh
        tYf0dmETciWOfWE1Aw8KmE2aPhBMauHsXXq97Ap1TkOFPRjUw+IEh333V2cLPbVR0fsX4qIm5MABzrJY
        8cVCYZ98JToMav8BjkTcm+o5uj69GGupiG+3aONTDN5DV71AuBTOViPsAgZz4aIWtzLCPyx8pZniIT67
        iD+G6wDG3Ac6UYsgm+nc+EmHOSTqpWMxhDA0XnoTXR9oIBcLMLhyfJbQ5akkZPXqELIWpAOmcIJnbQum
        ac6xPF0ex4L3az+KLQMj+M86l5CQkJBgjsHgD3ccWSc5oBv+AAAAAElFTkSuQmCC
</value>
  </data>
</root>